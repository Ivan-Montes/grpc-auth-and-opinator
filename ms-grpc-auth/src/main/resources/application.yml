
spring:
  application:
    name: ms-grpc-auth

  config:
    import: optional:file:.env[.properties]

# H2 Database
  datasource:
    url: jdbc:h2:mem:theGrpcAuthDb

# Defer data.sql until Spring loads
  jpa:
    defer-datasource-initialization: true
# for any script-based initialization
  sql:
    init:
      mode: always

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${properties.authorization.server.issuer}

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      transaction-id-prefix: tx-${eureka.instance.instance-id}-
      properties:
        enable:
          idempotence: true
        cleanup:
          policy: compact
        acks: all
        retries: 10
        retry:
          backoff:
            ms: 1000
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        isolation:
          level: read_committed
        spring:
          json:
            trusted:
              packages: '*'

# Custom properties  
properties:
  authorization:
    server:
      issuer: http://localhost:${server.port}
  oauth2:
    clientId: client
    clientSecret: ${OAUTH2_CLIENTSECRET}
    redirectUri: http://localhost:9000/callback

server:
  port: ${SERVER_PORT:9000}

grpc:
  server:
    port: ${GRPC_SERVER_PORT:9001}
    security:
      enabled: true
      certificateChain: file:certificates/server.crt
      privateKey: file:certificates/server.key
      trustCertCollection: file:certificates/ca.crt
      clientAuth: OPTIONAL
  client:
    UserAppGrpcClient:
      address: 'discovery:///ms-grpc-user'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: TLS
      security:
        trustCertCollection: file:certificates/ca.crt

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
    preferIpAddress: true
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/   

logging:
 level:
   org:
     springframework:
       security: ERROR      
   
